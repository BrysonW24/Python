# GenAI Benefits Finder - Phase 2
## Bryson Walter
## 24-07-2023

# Version 1

# Lists of potential choices for using GenAI, creating AEM links
source = ["CEE","TNT"]
audience_group = ["AI","ALL","BEH","DEF","PRO","TBT"]
milestone_detail = ["ADOC","ADOD","ADOE","ATQ","COLL","FWB","LDG","RET","RTBG","RTDD","RTPC","RTPS","RTRC","RTRD","RTRF","RTRS","SER","SERAW","SEROP","SNS"]
product_category = ["AF","AP","BL","BNPL","BOS","BTA","BUS","Cards","CC","CCU","CI","CLI","ES","FA","FX","HI","HL","HLP","HLTU","IMT",
                    "INV","LI","MER","NA","PAR","PHI","PL","PMTS","PO","SAV","SB","SHOP","SMSF","TD","TI","TMC","TRAN","X15","YS"]
location = ["CAAF","CAHB","CAFY"]
segments = ["Exp","1OAA","2MS","3UB","4TS","5RE","6CS","7RC","8CH","9US","10BN","11MM","12OTGE","13CCS","14RSS","15UT","16CSE",
            "17BR","18PE","19HOM","20UC","21BFS","22UD","23RS","24SS","25VS","26CC","27UH","28GS","29SN","30YE","31YMN","32YRT"]
# NBC name
nbc_name = "BenenfitsFinderGeneric"

# Print the aem link
## Total assets required for this initiaitve (Exp + 32 in this example)
assets_total = 33 

## Initialising the counter for the number of assets to generate
assets_generated = 0

## Storing the AEM Links
dynamic_assets = []

## While loop to iterate over this - "segments" uses dynamic indexing to print segments
while assets_generated < assets_total:
    dynamic_asset = source[0] + '-' + audience_group[0] + '-' + milestone_detail[5] + '-' + product_category[23] + '-' + nbc_name + '-' + location[1] + '-' + segments[assets_generated] 
    print(f"{dynamic_asset}")
    dynamic_assets.append(dynamic_asset)
    assets_generated += 1

=======================================================

# AEM Upload - Step 1

import pandas as pd

# Adjusting the width of the notebook
pd.set_option('display.width', 1000)

# Creating a dictionary to store the static data for this step
static_data = {
    "jcr:primaryType": "cq:Page",
    "jcr:content/jcr:primaryType": "cq:PageContent",
    "jcr:content/cq:template": "/apps/activity-feeds/templates/activity-feeds-content-templates",
    "jcr:content/sling:resourceType": "apps/activity-feeds/components/page/contentpagecomponent",
    "jcr:content/jcr:title": dynamic_assets,
    "jcr:content/dataImporter": "true"
}

# Creating the DataFrame
df1 = pd.DataFrame(static_data)

# Adding the 'path' column with our previously generated AEM links
df1.insert(0, "path", dynamic_assets)

# Printing the dataframe, the columns are weird though.. I don't know how to fix it
print(df1)

=======================================================

# AEM Upload - Step 2

# Adjusting the width of the notebook
pd.set_option('display.width', 1000)

# List of suffixes for the paths
suffixes_1 = [
    "/jcr:content/af-content",
    "/jcr:content/af-content/image"
]

# Content for columns (path is below)
step2_primaryType = "nt:unstructured"
step2_resourceType = ["wcm/foundation/components/parsys", " "]
step2_imageRotate = [" ", "0"]

# Creating a dictionary to store the data for the DataFrame
data_dict_1 = {
    "path": [],                 # To store the paths based on the dynamic_assets and suffixes
    "jcr:primaryType": [],      # Static value = step2_primaryType
    "sling:resourceType": [],   # Static value = step2_resourceType
    "imageRotate": [],          # Static value = step2_imageRotate
}

# Looping through the lists to add data to the dictionary
for asset, suffix in zip(dynamic_assets, suffixes_1):
    for i in range(len(step2_resourceType)):
        path = "/content/ext/ActivityFeed/Draft/Automation/FWB/" + asset + suffix
        data_dict_1["path"].append(path + suffix)
        data_dict_1["jcr:primaryType"].append(step2_primaryType)
        data_dict_1["sling:resourceType"].append(step2_resourceType[i])
        data_dict_1["imageRotate"].append(step2_imageRotate[i])

# Creating the DataFrame
df2 = pd.DataFrame(data_dict_1)

# Printing the dataframe, the columns are weird though.. I don't know how to fix it
print(df2)

=======================================================

# AEM Upload - Step 3

# Creating a dictionary to store the static data for this step

# List of suffixes for the paths
suffixes_2 = [
    "/jcr:content/af-content/background_image_pri",
    "/jcr:content/af-content/background_image_pri/actions",
    "/jcr:content/af-content/background_image_pri/menuActions"
]

# Content for columns (path is below)
step3_primaryType = "nt:unstructured"
step3_resourceType = ["activity-feeds/components/content/background-image-primary-action", "", ""]
step3_dismissable = ["true", "", ""]
step3_templateId = ["BackgroundImagePrimaryAction", "", ""]
step3_title = ["Placeholder", "", ""]
step3_contentSummary = ["Placeholder", "", ""]
step3_content = " "
step3_attributes = ["https://www.commbank.com.au/content/dam/commbank-assets/app/hero-banner/NA/SpendTrackerEngagement.png", "", ""]

# Creating a dictionary to store the data for the DataFrame
data_dict_2 = {
    "path": [],                 # To store the paths based on the dynamic_assets and suffixes
    "jcr:primaryType": [],      # Static value = step3_primaryType 
    "sling:resourceType": [],   # Static value = step3_resourceType
    "dismissable": [],           # Specific pattern = step3_dismissable
    "templateId": [],            # Specific pattern = step3_templateId
    "title": [],                 # Specific pattern = step3_title
    "contentSummary": [],        # Specific pattern = step3_contentSummary
    "content": [],              # Static value = step3_content
    "attributes": [],           # Static value = step3_attributes
}

# Looping through the lists to add data to the dictionary
for asset in dynamic_assets:
    for suffix_index, suffix in enumerate(suffixes_2):
        path = "/content/ext/ActivityFeed/Draft/Automation/FWB/" + str(asset) + str(suffix)
        data_dict_2["path"].append(path)
        data_dict_2["jcr:primaryType"].append(step3_primaryType)
        data_dict_2["sling:resourceType"].append(step3_resourceType)
        data_dict_2["dismissable"].append(step3_dismissable[suffix_index])
        data_dict_2["templateId"].append(step3_templateId[suffix_index])
        data_dict_2["title"].append(step3_title[suffix_index])
        data_dict_2["contentSummary"].append(step3_contentSummary[suffix_index])
        data_dict_2["content"].append(step3_content)
        data_dict_2["attributes"].append(step3_attributes[suffix_index])
        
# Creating the DataFrame
df3 = pd.DataFrame(data_dict_2)

# Printing the dataframe, the columns are weird though.. I don't know how to fix it
print(df3)

=======================================================

# AEM Upload - Step 4

# Creating a dictionary to store and loop on the dynamic and static data for this step

# List of suffixes for the paths
suffixes_3 = [
    "/jcr:content/af-content/background_image_pri/actions/item1",
    "/jcr:content/af-content/background_image_pri/actions/item0",
    "/jcr:content/af-content/background_image_pri/menuActions/item1",
    "/jcr:content/af-content/background_image_pri/menuActions/item0"
]

# Content for columns (path is below)
step4_primaryType = "nt:unstructured"
step4_resourceType = ""
step4_behaviour = ["Dismiss", "Unknown", "Dismiss", "Dismiss"]
step4_feedback = ["Remind", "Clicked", "Remind", "Dismiss"]
step4_type = ["secondary", "primary", "menu", "menu"]
step4_label = ["Hide", "Benefits Finder", "Remind me in 5 days", "Dismiss"]
step4_value = "cba.commbank.phone://products/detail?product=BenefitsFinderDisclaimer&path=content/api/app/products/orphanpages/NBC.jsoncnt.json"

# Creating a dictionary to store the data for the DataFrame
data_dict_3 = {
    "path": [],  # To store the paths based on the dynamic_assets and suffixes = path
    "jcr:primaryType": [],   # Static value = step4_primaryType
    "sling:resourceType": [],   # Static value = step4_resourceType
    "behaviour": [],    # Specific pattern = step4_behaviour
    "feedback": [],    # Specific pattern = step4_feedback
    "type": [],    # Specific pattern = step4_type
    "label": [],    # Specific pattern = step4_label
    "value": [],   # Static value = step4_value
}

# Looping through the lists to add data to the dictionary
for asset in dynamic_assets:
    for suffix_index, suffix in enumerate(suffixes_3):
        path = "/content/ext/ActivityFeed/Draft/Automation/FWB/" + asset + suffix
        data_dict_3["path"].append(path)
        data_dict_3["jcr:primaryType"].append(step4_primaryType)
        data_dict_3["sling:resourceType"].append(step4_resourceType)
        data_dict_3["behaviour"].append(step4_behaviour[suffix_index])
        data_dict_3["feedback"].append(step4_feedback[suffix_index])
        data_dict_3["type"].append(step4_type[suffix_index])
        data_dict_3["label"].append(step4_label[suffix_index])
        data_dict_3["value"].append(step4_value)

# Creating the DataFrame
df4 = pd.DataFrame(data_dict_3)

# Printing the dataframe, the columns are weird though.. I don't know how to fix it
print(df4)
